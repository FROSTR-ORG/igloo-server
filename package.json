{
  "name": "igloo-server",
  "version": "1.0.1",
  "scripts": {
    "start": "bun run src/server.ts",
    "start:headless": "if [ \"$HEADLESS\" = \"true\" ]; then echo 'Headless mode: skipping frontend build'; else bun run build; fi && bun run start",
    "build:css": "cd frontend && bunx tailwindcss -i ./styles.css -o ../static/styles.css --watch",
    "build:css:prod": "cd frontend && bunx tailwindcss -i ./styles.css -o ../static/styles.css --minify",
    "copy:qr-worker": "bun scripts/copy-qr-worker.mjs",
    "build:js": "bun run copy:qr-worker && esbuild frontend/index.tsx --bundle --outfile=static/app.js --jsx=automatic",
    "build:js:prod": "bun run copy:qr-worker && NODE_ENV=production esbuild frontend/index.tsx --bundle --outfile=static/app.js --jsx=automatic --minify --tree-shaking --define:process.env.NODE_ENV='\"production\"'",
    "build": "bun run build:js:prod && bun run build:css:prod",
    "prebuild": "bun run docs:vendor:ci",
    "build:dev": "bun run build:js && cd frontend && bunx tailwindcss -i ./styles.css -o ../static/styles.css",
    "predev": "bun run docs:vendor:ci",
    "build:conditional": "[ \"$HEADLESS\" = \"true\" ] && echo 'Headless mode: skipping frontend build' || bun run build",
    "dev": "concurrently \"bun run build:css\" \"bun run build:js -- --watch\"",
    "docs:validate": "bunx redocly lint docs/openapi.yaml",
    "docs:vendor": "bun scripts/fetch-swagger-ui.mjs",
    "docs:vendor:ci": "bun run docs:vendor || echo '[docs:vendor] skipped (offline or unpkg unreachable)'",
    "docs:bundle": "bunx redocly bundle docs/openapi.yaml --output docs/openapi.json",
    "release": "./scripts/release.sh",
    "release:patch": "./scripts/release.sh patch",
    "release:minor": "./scripts/release.sh minor",
    "release:major": "./scripts/release.sh major",
    "postinstall": "bun scripts/patch-zod-compat.mjs",
    "api:test:get": "bun scripts/api/test-get-endpoints.ts",
    "api:test:get:blocked": "bun scripts/api/test-get-permissions.ts",
    "api:test:get:list": "bun scripts/api/list-get-endpoints-from-openapi.ts",
    "api:test:get:all": "bun run api:test:get && bun run api:test:get:blocked",
    "api:test:sign": "bun scripts/api/test-post-sign.ts",
    "api:test:cors": "bun scripts/api/test-cors-preflight.ts",
    "api:test:get:openapi": "bun scripts/api/test-get-openapi-sweep.ts",
    "api:test:ws": "bun scripts/api/test-ws-events.ts",
    "api:test:nip": "bun scripts/api/test-nip44-nip04.ts"
  },
  "dependencies": {
    "@cmdcode/buff": "^2.2.5",
    "@cmdcode/nostr-connect": "^0.0.7",
    "@frostr/bifrost": "^1.0.7",
    "@frostr/igloo-core": "^0.2.4",
    "@noble/ciphers": "^1.3.0",
    "@noble/curves": "^1.9.7",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.13",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.523.0",
    "nostr-tools": "^2.17.0",
    "qr-scanner": "^1.4.2",
    "qrcode.react": "^4.2.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "tailwind-merge": "^3.3.1",
    "yaml": "^2.8.1"
  },
  "devDependencies": {
    "@redocly/cli": "^1.34.5",
    "@types/node": "^22.18.12",
    "@types/react": "^18.3.26",
    "@types/react-dom": "^18.3.7",
    "@types/yaml": "^1.9.7",
    "bun-types": "^1.3.1",
    "concurrently": "^9.2.1",
    "esbuild": "^0.24.2",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.18",
    "tailwindcss-animate": "^1.0.7"
  }
}
